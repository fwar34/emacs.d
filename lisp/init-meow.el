;;; init-meow.el --- Useful preset transient commands  -*- coding:utf-8; lexical-binding: t; -*-
;;; Commentary:

(defun key-mappings-setup ()
  (global-set-key (kbd "C-c du") #'(lambda ()
                              (interactive)
                              (if (featurep 'diff-hl)
                                  (diff-hl-diff-goto-hunk)
                                (define-advice git-gutter:popup-hunk (:around (orig-fun &rest args) my-git-gutter:popup-hunk)
                                  (let ((res (apply orig-fun args)))
                                    (when res
                                      (switch-to-buffer-other-window res)
                                      (evil-local-set-key 'normal (kbd "q") 'kill-buffer-and-window))))
                                (git-gutter:popup-hunk))))
                      (global-set-key (kbd "C-c dr") #'(lambda ()
                              (interactive)
                              (if (featurep 'diff-hl)
                                  (diff-hl-revert-hunk)
                                (progn
                                  (advice-remove 'git-gutter:popup-hunk 'git-gutter:popup-hunk@my-git-gutter:popup-hunk)
                                  (git-gutter:revert-hunk)))))
                      (global-set-key (kbd "C-c dn") #'(lambda ()
                              (interactive)
                              (if (featurep 'diff-hl)
                                  (diff-hl-next-hunk)
                                (git-gutter:next-hunk (line-number-at-pos)))))
                      (global-set-key (kbd "C-c dp") #'(lambda ()
                              (interactive)
                              (if (featurep 'diff-hl)
                                  (diff-hl-previous-hunk)
                                (git-gutter:previous-hunk (line-number-at-pos)))))
                      (global-set-key (kbd "C-c d=") 'diff-hl-diff-goto-hunk)
  )

;;; Code:
(use-package meow
  :init
  (defun meow-setup ()
    (setq meow-cheatsheet-layout meow-cheatsheet-layout-qwerty)
    (meow-motion-overwrite-define-key
     '("j" . meow-next)
     '("k" . meow-prev)
     '("<escape>" . ignore))
    (meow-leader-define-key
     ;; SPC j/k will run the original command in MOTION state.
     '("j" . "H-j")
     '("k" . "H-k")
     ;; Use SPC (0-9) for digit arguments.
     '("1" . meow-digit-argument)
     '("2" . meow-digit-argument)
     '("3" . meow-digit-argument)
     '("4" . meow-digit-argument)
     '("5" . meow-digit-argument)
     '("6" . meow-digit-argument)
     '("7" . meow-digit-argument)
     '("8" . meow-digit-argument)
     '("9" . meow-digit-argument)
     '("0" . meow-digit-argument)
     '("/" . meow-keypad-describe-key)
     '("?" . meow-cheatsheet))
    (meow-leader-define-key
     '("o" . other-window)
     '("ww" . major-mode-hydras/persp-mode/body)
     '("bb" . persp-switch-last)
     )
    (meow-normal-define-key
     '("0" . meow-expand-0)
     '("9" . meow-expand-9)
     '("8" . meow-expand-8)
     '("7" . meow-expand-7)
     '("6" . meow-expand-6)
     '("5" . meow-expand-5)
     '("4" . meow-expand-4)
     '("3" . meow-expand-3)
     '("2" . meow-expand-2)
     '("1" . meow-expand-1)
     '("-" . negative-argument)
     '("/" . meow-reverse)
     '("," . meow-inner-of-thing)
     '("." . meow-bounds-of-thing)
     '("[" . meow-beginning-of-thing)
     '("]" . meow-end-of-thing)
     '("a" . meow-append)
     '("A" . meow-open-below)
     '("b" . meow-back-word)
     '("B" . meow-back-symbol)
     '("c" . meow-change)
     '("d" . meow-delete)
     '("D" . meow-backward-delete)
     '("e" . meow-next-word)
     '("E" . meow-next-symbol)
     '("f" . meow-find)
     '("F" . meow-find-expand)
     '("g" . meow-cancel-selection)
     '("G" . meow-grab)
     '("h" . meow-left)
     '("H" . meow-left-expand)
     '("i" . meow-insert)
     '("I" . meow-open-above)
     '("j" . meow-next)
     '("J" . meow-next-expand)
     '("k" . meow-prev)
     '("K" . meow-prev-expand)
     '("l" . meow-right)
     '("L" . meow-right-expand)
     '("m" . meow-join)
     '("n" . meow-search)
     '("N" . meow-pop-search)
     '("o" . meow-block)
     '("O" . meow-to-block)
     '("p" . meow-yank)
     '("q" . meow-quit)
     '("Q" . meow-goto-line)
     '("r" . meow-replace)
     '("R" . meow-swap-grab)
     '("s" . meow-kill)
     '("S" . meow-kill-whole-line)
     '("t" . meow-till)
     '("T" . meow-till-expand)
     '("u" . meow-undo)
     '("U" . meow-undo-in-selection)
     '("v" . meow-visit)
     '("w" . meow-mark-word)
     '("W" . meow-mark-symbol)
     '("x" . meow-line)
     '("X" . meow-line-expand)
     '("y" . meow-save)
     '("Y" . meow-sync-grab)
     '("z" . meow-pop-selection)
     '("'" . repeat)
     '("`" . meow-last-buffer)
     '("\\" . meow-comment)
     '("&" . meow-query-replace-regexp)
     '("%" . meow-query-replace)
     '("<escape>" . ignore))
    (meow-normal-define-key
     '(";1" . winum-select-window-1)
     '(";2" . winum-select-window-2)
     '(";3" . winum-select-window-3)
     '(";4" . winum-select-window-4)
     '(";5" . winum-select-window-5)
     '(";6" . winum-select-window-6)
     '(";7" . winum-select-window-7)
     '(";8" . winum-select-window-8)
     '(";9" . winum-select-window-9)
     '(";so" . symbol-overlay-put)
     '(";st" . symbol-overlay-transient)
     '(";ma" . magit)
     '(";xx" . highlight-remove-all)
     ))
  :config
  (meow-setup)
  (meow-global-mode 1)
  (key-mappings-setup)
  )

(provide 'init-meow)
;;; init-meow.el ends here
